Перем Токены, Узлы, Директивы, ИнструкцииПрепроцессора, СимволыПрепроцессора;
Перем Результат;
Перем Комментарии;
Перем ТекущаяОбласть;
Перем ТаблицаИнтерфейсаОбъекта;
Перем ИмяОбъекта;

Процедура Инициализировать(Парсер) Экспорт
	Токены = Парсер.Токены();
	Узлы = Парсер.Узлы();
	Директивы = Парсер.Директивы();
	ИнструкцииПрепроцессора = Парсер.ИнструкцииПрепроцессора();
	СимволыПрепроцессора = Парсер.СимволыПрепроцессора();
	Результат = Новый Массив;
	ТекущаяОбласть = "";
	ТаблицаПараметровМетодов = ПолучитьТаблицуПараметровМетодов();
	ТаблицаМетодов = ПолучитьТаблицуМетодов();
	ТаблицаИнтерфейсаОбъекта = ПолучитьТаблицуИнтерфейсаОбъекта();
	ИмяОбъекта = "";
КонецПроцедуры // Инициализировать()

Функция Результат() Экспорт

	Возврат СтрСоединить(Результат);
КонецФункции // Результат()

Функция Интерфейс() Экспорт
	Перем Интерфейс;
	Интерфейс = Новый Массив;
	Интерфейс.Добавить("ПосетитьМодуль");
	Интерфейс.Добавить("ПосетитьОбъявлениеМетода");
	Интерфейс.Добавить("ПосетитьОбъявлениеПеременнойУровняМодуля");
	Интерфейс.Добавить("ПосетитьИнструкциюПрепроцессора");
	
	
	// Интерфейс.Добавить("ПосетитьОбъявлениеСпискаПеременныхУровняМодуля");
	
	// Комментарии
	Возврат Интерфейс;
КонецФункции // Интерфейс()

#Область Подписки

Процедура ПосетитьМодуль(ОбъявлениеМодуля, Стек, Счетчики) Экспорт

	Комментарии = ОбъявлениеМодуля.Комментарии;
	Объявления = ОбъявлениеМодуля.Объявления;

	// Сообщить(Объявления.Количество());

	// Для каждого Переменная Из Объявления Цикл
	// 	Сообщить(Переменная.Тип);
	// КонецЦикла;

КонецПроцедуры

Процедура ПосетитьИнструкциюПрепроцессора(ОбъявлениеПрепроцессора, Стек, Счетчики) Экспорт

	Если ОбъявлениеПрепроцессора.Тип = Узлы.ИнструкцияПрепроцессораОбласть Тогда
		ТекущаяОбласть = ОбъявлениеПрепроцессора.Имя;
	КонецЕсли;

	Если ОбъявлениеПрепроцессора.Тип = Узлы.ИнструкцияПрепроцессораКонецОбласти Тогда
		ТекущаяОбласть = "";
	КонецЕсли;

	// Сообщить(Объявления.Количество());

	// Для каждого Переменная Из Объявления Цикл
	// 	Сообщить(Переменная.Тип);
	// КонецЦикла;

КонецПроцедуры

Процедура ПосетитьОбъявлениеМетода(ОбъявлениеМетода, Стек, Счетчики) Экспорт



	//Тип: строка (один из Узлы) = Узлы.ОбъявлениеМетода
	//Сигнатура: структура (СигнатураПроцедуры, СигнатураФункции)
	//Переменные: массив (ОбъявлениеЛокальнойПеременной)
	//Авто: массив (Объект)
	//Инструкции: массив (один из #Инструкции)
	//Место: число, структура (Место)

	//Тип: строка (один из Узлы) = Узлы.СигнатураФункции
	//Имя: строка
	//Директива: строка (один из Директивы)
	//Параметры: массив (ОбъявлениеПараметра)
	//Экспорт: булево
	//Место: число, структура (Место)

	Сигнатура = ОбъявлениеМетода.Сигнатура;
	
	Если Не Сигнатура.Экспорт Тогда
		Возврат;
	КонецЕсли;
	// ТаблицаЗначений.Колонки.Добавить("Область");
	// ТаблицаЗначений.Колонки.Добавить("ПолноеИмяОбъекта");
	// ТаблицаЗначений.Колонки.Добавить("ОписаниеМетода");
	// ТаблицаЗначений.Колонки.Добавить("ОписаниеПараметров");
	// ТаблицаЗначений.Колонки.Добавить("ОписаниеВозвращаемогоЗначения");
	// ТаблицаЗначений.Колонки.Добавить("ОписаниеПримера");
	// // ОписаниеИнтерфейсаОбъекта.Колонки.Добавить("СинтаксисМетода");
	// ТаблицаЗначений.Колонки.Добавить("ИмяМетода");
	// ТаблицаЗначений.Колонки.Добавить("ТипМетода");
	// // ОписаниеИнтерфейсаОбъекта.Колонки.Добавить("СинтаксисВызова");
	// ТаблицаЗначений.Колонки.Добавить("Публичный");

	СтрокаМетода = ТаблицаИнтерфейсаОбъекта.Добавить();

	СтрокаМетода.Область = ТекущаяОбласть;
	СтрокаМетода.ПолноеИмяОбъекта = ИмяОбъекта;
	СтрокаМетода.ИмяМетода = Сигнатура.Имя;
	СтрокаМетода.ТипМетода = Сигнатура.Тип;
	
	НомерСтрокиНачала = ОбъявлениеМетода.Место.НомерСтрокиНачала;
	МассивСтрокКомментария = СобратьКомментарийОбъявления(НомерСтрокиНачала);

	СобранноеОписаниеМетода = СобратьОписаниеМетода(МассивСтрокКомментария);
	СтрокаМетода.ОписаниеМетода = СобранноеОписаниеМетода.ОписаниеМетода;
	СтрокаМетода.ОписаниеПараметров = СобранноеОписаниеМетода.ОписаниеПараметров;
	СтрокаМетода.ОписаниеВозвращаемогоЗначения = СобранноеОписаниеМетода.ОписаниеВозвращаемогоЗначения;
	СтрокаМетода.ОписаниеПримера = СобранноеОписаниеМетода.ОписаниеПримера;

	// Сообщить("ОписаниеМетода");
	// Сообщить(СобранноеОписаниеМетода.ОписаниеМетода.Количество());

	// Сообщить("ОписаниеПараметров");
	// Сообщить(СобранноеОписаниеМетода.ОписаниеПараметров.Количество());
	// Сообщить("ОписаниеВозвращаемогоЗначения");
	// Сообщить(СтрСоединить(СобранноеОписаниеМетода.ОписаниеВозвращаемогоЗначения, Символы.ПС));

	// ОбъявлениеПараметра

    // Хранит информацию об объявлении параметра.
    // Пример:
    // Объявления параметров заключены в скобки <...>

    //  Процедура(<П1>, <Знач П2 = Неопределено>)

    // Тип: строка (один из Узлы) = Узлы.ОбъявлениеПараметра
    // Имя: строка
    // ПоЗначению: булево
    // Значение: неопределено, структура (ВыражениеУнарное, ВыражениеОсновнойЛитерал)
    // Место: число, структура (Место)

	// Для каждого Параметр Из ОбъявлениеМетода.Сигнатура.Параметры Цикл
		
	// 	Сообщить(СтрШаблон("Параметр <%1> -> <%2> тип <%3>", Параметр.Имя, Параметр.Значение, Параметр.Тип));

	// КонецЦикла;



КонецПроцедуры // ПосетитьИнструкциюПрисваивания()

Функция СобратьОписаниеМетода(МассивСтрокКомментария)

	СтруктураОписанияМетода = Новый Структура("ОписаниеМетода, ОписаниеПараметров, ОписаниеВозвращаемогоЗначения, ОписаниеПримера"
				, Новый Массив()
				, Новый Массив()
				, Новый Массив()
				, Новый Массив()
				);

	ФормируемОписаниеМетода = Истина;
	ФормируемОписаниеПараметров = Ложь;
	ФормируемОписаниеВозвращаемогоЗначения = Ложь;
	ФормируемОписаниеПримера = Ложь;

	Для каждого СтрокаКомментария Из МассивСтрокКомментария Цикл
		
		Если ПустаяСтрока(СокрЛП(СтрокаКомментария)) Тогда
			Продолжить;
		КонецЕсли;

		Если СтрЗаканчиваетсяНа(НРег(СтрокаКомментария), "параметры:") Тогда
			ФормируемОписаниеМетода = Ложь;
			ФормируемОписаниеПараметров = Истина;
			ФормируемОписаниеВозвращаемогоЗначения = Ложь;
			ФормируемОписаниеПримера = Ложь;			
			Продолжить;
		КонецЕсли;

		Если СтрЗаканчиваетсяНа(НРег(СтрокаКомментария), "возвращаемое значение:") Тогда
			ФормируемОписаниеМетода = Ложь;
			ФормируемОписаниеПараметров = Ложь;
			ФормируемОписаниеВозвращаемогоЗначения = Истина;
			ФормируемОписаниеПримера = Ложь;			
			Продолжить;
		КонецЕсли;

		Если СтрЗаканчиваетсяНа(НРег(СтрокаКомментария), "пример") Тогда
			ФормируемОписаниеМетода = Ложь;
			ФормируемОписаниеПараметров = Ложь;
			ФормируемОписаниеВозвращаемогоЗначения = Ложь;
			ФормируемОписаниеПримера = Истина;			
			Продолжить;
		КонецЕсли;

		Если ФормируемОписаниеМетода Тогда
			СтруктураОписанияМетода.ОписаниеМетода.Добавить(СтрокаКомментария);
		ИначеЕсли ФормируемОписаниеПараметров Тогда
			СтруктураОписанияМетода.ОписаниеПараметров.Добавить(СтрокаКомментария);
		ИначеЕсли ФормируемОписаниеВозвращаемогоЗначения Тогда
			СтруктураОписанияМетода.ОписаниеВозвращаемогоЗначения.Добавить(СтрокаКомментария);
		ИначеЕсли ФормируемОписаниеПримера Тогда
			СтруктураОписанияМетода.ОписаниеПримера.Добавить(СтрокаКомментария);
		КонецЕсли;

	КонецЦикла;

	Возврат СтруктураОписанияМетода;

КонецФункции

Функция СобратьКомментарийОбъявления(Знач НачальнаяСтрокаОбъявления)
	
	МассивСтрок = Новый Массив;
	
	СтрокаКомментария = Комментарии[НачальнаяСтрокаОбъявления];

	Если НЕ СтрокаКомментария = Неопределено Тогда
		МассивСтрок.Вставить(0, СтрокаКомментария);
	КонецЕсли;

	НомерСтрокиКомментария = НачальнаяСтрокаОбъявления - 1;

	Пока НомерСтрокиКомментария > 0 Цикл

		СтрокаКомментария = Комментарии[НомерСтрокиКомментария];

		Если НЕ СтрокаКомментария = Неопределено Тогда

			Если ПустаяСтрока(СокрЛП(СтрокаКомментария)) Тогда
				НомерСтрокиКомментария = НомерСтрокиКомментария - 1;
				Продолжить;
			КонецЕсли;

			МассивСтрок.Вставить(0, СтрокаКомментария);

		Иначе
			Прервать;
		КонецЕсли;
	
		НомерСтрокиКомментария = НомерСтрокиКомментария - 1;

	КонецЦикла;

	Возврат МассивСтрок;

КонецФункции

Функция ОписаниеМетода()
	
КонецФункции

Функция ОписаниеПараметраМетода(ИмяПараметра, ТипПараметра, КомментарийПараметра)

	Описание = Новый Структура("Имя, Тип, Комментарий");
	Описание.Имя = ИмяПараметра;	
	Описание.Имя = ИмяПараметра;	
	Описание.Тип = ТипПараметра; // Узлы.ВыражениеОсновнойЛитерал	
	Описание.Комментарий = КомментарийПараметра;	

	Возврат Описание;

КонецФункции

Функция ПолучитьТаблицуМетодов()

	ТаблицаЗначений = Новый ТаблицаЗначений();
	ТаблицаЗначений.Колонки.Добавить("Имя");
	ТаблицаЗначений.Колонки.Добавить("Тип");
	ТаблицаЗначений.Колонки.Добавить("Экспорт");
	ТаблицаЗначений.Колонки.Добавить("КоличествоПараметров");
	ТаблицаЗначений.Колонки.Добавить("Комментарий");

	Возврат ТаблицаЗначений;
	
КонецФункции

Функция ПолучитьТаблицуИнтерфейсаОбъекта()
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Область");
	ТаблицаЗначений.Колонки.Добавить("ПолноеИмяОбъекта");
	ТаблицаЗначений.Колонки.Добавить("ОписаниеМетода");
	ТаблицаЗначений.Колонки.Добавить("ОписаниеПараметров");
	ТаблицаЗначений.Колонки.Добавить("ОписаниеВозвращаемогоЗначения");
	ТаблицаЗначений.Колонки.Добавить("ОписаниеПримера");
	// ОписаниеИнтерфейсаОбъекта.Колонки.Добавить("СинтаксисМетода");
	ТаблицаЗначений.Колонки.Добавить("ИмяМетода");
	ТаблицаЗначений.Колонки.Добавить("ТипМетода");
	// ОписаниеИнтерфейсаОбъекта.Колонки.Добавить("СинтаксисВызова");
	ТаблицаЗначений.Колонки.Добавить("Публичный");
	// ОписаниеИнтерфейсаОбъекта.Колонки.Добавить("Размещение");

	Возврат ТаблицаЗначений;
КонецФункции

Функция ПолучитьТаблицуПараметровМетодов()

	ТаблицаЗначений = Новый ТаблицаЗначений();
	ТаблицаЗначений.Колонки.Добавить("ИмяМетода");
	ТаблицаЗначений.Колонки.Добавить("Тип");
	ТаблицаЗначений.Колонки.Добавить("Имя");
	ТаблицаЗначений.Колонки.Добавить("ПоУмолчанию");
	ТаблицаЗначений.Колонки.Добавить("Значение");
	ТаблицаЗначений.Колонки.Добавить("Комментарий");

	Возврат ТаблицаЗначений;
	
КонецФункции


Процедура ПосетитьОбъявлениеПеременнойУровняМодуля(ОбъявлениеПеременной, Стек, Счетчики) Экспорт

	// Сообщить(ОбъявлениеПеременной.Имя);
	// НомерСтрокиНачала = ОбъявлениеПеременной.Место.НомерСтрокиНачала;
	// НомерСтрокиОкончания = ОбъявлениеПеременной.Место.НомерСтрокиОкончания;

	// Сообщить(СтрШаблон("Переменная начинается <%1> -> <%2>", НомерСтрокиНачала, НомерСтрокиОкончания));
	// Сообщить(СтрШаблон("Комментарий переменной <%1>", Комментарии[НомерСтрокиНачала]));

КонецПроцедуры // ПослеПосещенияИнструкцииПрисваивания()


#КонецОбласти // Подписки