#Использовать "./internal"

Перем Токены, Узлы, Директивы, ИнструкцииПрепроцессора, СимволыПрепроцессора;
Перем Результат;
Перем Комментарии;
Перем ТекущаяОбласть;
Перем ИнтерфейсОбъекта;
Перем ИмяОбъекта;

Процедура Инициализировать(Парсер) Экспорт
	Токены = Парсер.Токены();
	Узлы = Парсер.Узлы();
	Директивы = Парсер.Директивы();
	ИнструкцииПрепроцессора = Парсер.ИнструкцииПрепроцессора();
	СимволыПрепроцессора = Парсер.СимволыПрепроцессора();
	Результат = Новый Массив;
	ТекущаяОбласть = "";
	
	ИмяОбъекта = "";
	ИнтерфейсОбъекта = Новый Структура();

КонецПроцедуры // Инициализировать()

Процедура УстановитьИмяОбъекта(Знач ПИмяОбъекта) Экспорт
	ИмяОбъекта = ПИмяОбъекта;
КонецПроцедуры

Функция Результат() Экспорт

	Возврат ИнтерфейсОбъекта;

КонецФункции // Результат()

Функция Интерфейс() Экспорт
	Перем Интерфейс;
	Интерфейс = Новый Массив;
	Интерфейс.Добавить("ПосетитьМодуль");
	Интерфейс.Добавить("ПосетитьОбъявлениеМетода");
	Интерфейс.Добавить("ПосетитьОбъявлениеПеременнойУровняМодуля");
	Интерфейс.Добавить("ПосетитьИнструкциюПрепроцессора");
	
	
	// Интерфейс.Добавить("ПосетитьОбъявлениеСпискаПеременныхУровняМодуля");
	
	// Комментарии
	Возврат Интерфейс;
КонецФункции // Интерфейс()

#Область Подписки

Процедура ПосетитьМодуль(ОбъявлениеМодуля, Стек, Счетчики) Экспорт

	Комментарии = ОбъявлениеМодуля.Комментарии;
	Объявления = ОбъявлениеМодуля.Объявления;

	// Сообщить(Объявления.Количество());

	// Для каждого Переменная Из Объявления Цикл
	// 	Сообщить(Переменная.Тип);
	// КонецЦикла;

КонецПроцедуры

Процедура ПосетитьИнструкциюПрепроцессора(ОбъявлениеПрепроцессора, Стек, Счетчики) Экспорт

	Если ОбъявлениеПрепроцессора.Тип = Узлы.ИнструкцияПрепроцессораОбласть Тогда
		ТекущаяОбласть = ОбъявлениеПрепроцессора.Имя;
	КонецЕсли;

	Если ОбъявлениеПрепроцессора.Тип = Узлы.ИнструкцияПрепроцессораКонецОбласти Тогда
		ТекущаяОбласть = "";
	КонецЕсли;

	// Сообщить(Объявления.Количество());

	// Для каждого Переменная Из Объявления Цикл
	// 	Сообщить(Переменная.Тип);
	// КонецЦикла;

КонецПроцедуры

Процедура ПосетитьОбъявлениеМетода(ОбъявлениеМетода, Стек, Счетчики) Экспорт

	Сигнатура = ОбъявлениеМетода.Сигнатура;
	
	Если Не Сигнатура.Экспорт Тогда
		Возврат;
	КонецЕсли;
 	
	НомерСтрокиНачала = ОбъявлениеМетода.Место.НомерСтрокиНачала;
	МассивСтрокКомментария = СобратьКомментарийОбъявления(НомерСтрокиНачала);

	СобранноеОписаниеМетода = СобратьОписаниеМетода(МассивСтрокКомментария);

	НаборОписанийПараметровОбъекта = Новый Структура();

	Для каждого Параметр Из ОбъявлениеМетода.Сигнатура.Параметры Цикл
		
		ТипОбъекта = Неопределено;	
		ЗначениеОбъекта = Неопределено;
		Если Параметр.ПоЗначению 
			И НЕ Параметр.Значение = Неопределено Тогда

			// Сообщить(ТипЗнч(Параметр.Значение));
			ТипОбъекта = Параметр.Значение.Вид;
			ЗначениеОбъекта = Параметр.Значение.Значение;
	
		КонецЕсли;
		
		ОписаниеПараметраОбъекта = Новый ОписаниеПараметраОбъекта(Параметр.Имя, 
					ТипОбъекта, , Параметр.ПоЗначению, Параметр.Значение);

		НаборОписанийПараметровОбъекта.Вставить(Параметр.Имя, ОписаниеПараметраОбъекта);
	 
	КонецЦикла;
	
	ОписаниеОбъекта = СтрСоединить(СобранноеОписаниеМетода.ОписаниеМетода);
	ОписаниеОбъектаМодуля = Новый ОписаниеОбъектаМодуля(
							Сигнатура.Имя,
							Сигнатура.Тип,
							ОписаниеОбъекта,
							ТекущаяОбласть,
							ИмяОбъекта,
							НаборОписанийПараметровОбъекта
							);
	
	ОписаниеОбъектаМодуля.ПрочитатьОписаниеПараметров(СобранноеОписаниеМетода.ОписаниеПараметров);
	ОписаниеОбъектаМодуля.ПрочитатьОписаниеВозвращаемогоЗначения(СобранноеОписаниеМетода.ОписаниеВозвращаемогоЗначения);
	ОписаниеОбъектаМодуля.ПрочитатьОписаниеПримера(СобранноеОписаниеМетода.ОписаниеПримера);

	ИнтерфейсОбъекта.Вставить(ОписаниеОбъектаМодуля.Имя, ОписаниеОбъектаМодуля);

КонецПроцедуры // ПосетитьИнструкциюПрисваивания()

Процедура ПосетитьОбъявлениеПеременнойУровняМодуля(ОбъявлениеПеременной, Стек, Счетчики) Экспорт

	// Сообщить(ОбъявлениеПеременной.Имя);
	// НомерСтрокиНачала = ОбъявлениеПеременной.Место.НомерСтрокиНачала;
	// НомерСтрокиОкончания = ОбъявлениеПеременной.Место.НомерСтрокиОкончания;

	// Сообщить(СтрШаблон("Переменная начинается <%1> -> <%2>", НомерСтрокиНачала, НомерСтрокиОкончания));
	// Сообщить(СтрШаблон("Комментарий переменной <%1>", Комментарии[НомерСтрокиНачала]));

КонецПроцедуры // ПослеПосещенияИнструкцииПрисваивания()


#КонецОбласти // Подписки

#Область Создание_интерфейса_Объекта

Функция СобратьОписаниеМетода(МассивСтрокКомментария)

	СтруктураОписанияМетода = Новый Структура("ОписаниеМетода, ОписаниеПараметров, ОписаниеВозвращаемогоЗначения, ОписаниеПримера"
				, Новый Массив()
				, Новый Массив()
				, Новый Массив()
				, Новый Массив()
				);

	ФормируемОписаниеМетода = Истина;
	ФормируемОписаниеПараметров = Ложь;
	ФормируемОписаниеВозвращаемогоЗначения = Ложь;
	ФормируемОписаниеПримера = Ложь;

	Для каждого СтрокаКомментария Из МассивСтрокКомментария Цикл
		
		Если ПустаяСтрока(СокрЛП(СтрокаКомментария)) Тогда
			Продолжить;
		КонецЕсли;

		Если СтрЗаканчиваетсяНа(НРег(СтрокаКомментария), "параметры:") Тогда
			ФормируемОписаниеМетода = Ложь;
			ФормируемОписаниеПараметров = Истина;
			ФормируемОписаниеВозвращаемогоЗначения = Ложь;
			ФормируемОписаниеПримера = Ложь;			
			Продолжить;
		КонецЕсли;

		Если СтрЗаканчиваетсяНа(НРег(СтрокаКомментария), "возвращаемое значение:") Тогда
			ФормируемОписаниеМетода = Ложь;
			ФормируемОписаниеПараметров = Ложь;
			ФормируемОписаниеВозвращаемогоЗначения = Истина;
			ФормируемОписаниеПримера = Ложь;			
			Продолжить;
		КонецЕсли;

		Если СтрЗаканчиваетсяНа(НРег(СтрокаКомментария), "пример") Тогда
			ФормируемОписаниеМетода = Ложь;
			ФормируемОписаниеПараметров = Ложь;
			ФормируемОписаниеВозвращаемогоЗначения = Ложь;
			ФормируемОписаниеПримера = Истина;			
			Продолжить;
		КонецЕсли;

		Если ФормируемОписаниеМетода Тогда
			СтруктураОписанияМетода.ОписаниеМетода.Добавить(СтрокаКомментария);
		ИначеЕсли ФормируемОписаниеПараметров Тогда
			СтруктураОписанияМетода.ОписаниеПараметров.Добавить(СтрокаКомментария);
		ИначеЕсли ФормируемОписаниеВозвращаемогоЗначения Тогда
			СтруктураОписанияМетода.ОписаниеВозвращаемогоЗначения.Добавить(СтрокаКомментария);
		ИначеЕсли ФормируемОписаниеПримера Тогда
			СтруктураОписанияМетода.ОписаниеПримера.Добавить(СтрокаКомментария);
		КонецЕсли;

	КонецЦикла;

	Возврат СтруктураОписанияМетода;

КонецФункции

Функция СобратьКомментарийОбъявления(Знач НачальнаяСтрокаОбъявления)
	
	МассивСтрок = Новый Массив;
	
	СтрокаКомментария = Комментарии[НачальнаяСтрокаОбъявления];

	Если СтрНачинаетсяС(СтрокаКомментария, " ") Тогда
		СтрокаКомментария = Сред(СтрокаКомментария, 2);
	КонецЕсли;

	Если НЕ СтрокаКомментария = Неопределено Тогда
		МассивСтрок.Вставить(0, СтрокаКомментария);
	КонецЕсли;

	НомерСтрокиКомментария = НачальнаяСтрокаОбъявления - 1;

	Пока НомерСтрокиКомментария > 0 Цикл

		СтрокаКомментария = Комментарии[НомерСтрокиКомментария];

		Если НЕ СтрокаКомментария = Неопределено Тогда

			Если ПустаяСтрока(СокрЛП(СтрокаКомментария)) Тогда
				НомерСтрокиКомментария = НомерСтрокиКомментария - 1;
				Продолжить;
			КонецЕсли;
			
			Если СтрНачинаетсяС(СтрокаКомментария, " ") Тогда
				СтрокаКомментария = Сред(СтрокаКомментария, 2);
			КонецЕсли;
		
			МассивСтрок.Вставить(0, СтрокаКомментария);

		Иначе
			Прервать;
		КонецЕсли;
	
		НомерСтрокиКомментария = НомерСтрокиКомментария - 1;

	КонецЦикла;

	Возврат МассивСтрок;

КонецФункции

#КонецОбласти