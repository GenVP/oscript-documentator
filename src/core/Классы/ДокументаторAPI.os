
#Использовать logos

Перем ПутьККаталогуИсходников; // Строка
Перем ПутьКВыходномуКаталогу; // Строка
Перем Лог; // Объект логирования

Перем РазборИсходниковВыполнен; // Булево

#Область Публичный_интерфейс

Функция УстановитьКаталогИсходников(Знач НовыйКататогИсходников) Экспорт

	ПутьККаталогуИсходников = НовыйКататогИсходников;
	РазборИсходниковВыполнен = Ложь;

	Возврат ЭтотОбъект;

КонецФункции

Функция ВыходнойКаталог(Знач НовыйПутьКВыходномуКаталогу) Экспорт
	
	ПутьКВыходномуКаталогу = НовыйПутьКВыходномуКаталогу;
	Возврат ЭтотОбъект;

КонецФункции

Функция ДокументрироватьВMarkdown(ВыходнойКаталогДокументации = "")

	Если ПустаяСтрока(ВыходнойКаталогДокументации) Тогда
		
	КонецЕсли;

	Возврат ЭтотОбъект;

КонецФункции

Процедура ПодготовитьТаблицуОписанияИнтерфейса() Экспорт
	
	ТаблицаОписанияИнтерфейса = ПолучитьТаблицуОписанияИнтерфейса();

	ФайлыМодулей = НайтиФайлы(КаталогИсходников, "*.os", Истина);
	
	Для Каждого ФайлМодуля Из ФайлыМодулей Цикл

		ТекущаяОбласть = "";
		ПолноеИмяОбъекта = ФайлМодуля.Имя;
		ПутьККаталогуФайла = ФайлМодуля.Путь;
		ТипОбъекта = ОпределитьТипОбъектаПоПути(ПутьККаталогуФайла);
		ТекстФайла = Новый ЧтениеТекста(ФайлМодуля.ПолноеИмя);
		ТекстМодуля = ТекстФайла.Прочитать();
		
		ПрочитатьТекстМодуля(ТекстМодуля);
		
	КонецЦикла;
	
	ТекстФайла.Закрыть();
	ТекстФайла = Неопределено;
	
	СтруктураОписанияИнтерфейса.Сортировать("ИмяМетода");
	
	Параметр = СтруктураОписанияИнтерфейса;
	//ПодготовитьГотовоеОписание();
		
КонецПроцедуры
